swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /users/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - User Transactions Module
      summary: User's transactions
      description: Retrieves all the user's transactions in the month
      parameters:
        - in: body
          name: userId
          description: user's id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: User's month transactions successfully recovered
          schema:
            $ref: "#/definitions/User_Transactions_GET_Response"
        "400":
          description: Empty or incorrect fields.
        "401":
          description: Unauthorized access for this endpoint.
        "404":
          description: No existing transactions on your account..
        "500":
          description: The server has encountered an internal server error. Please try again later.
    post:
      security:
        - Bearer: []
      tags:
        - User Transactions Module
      summary: User's transactions
      description: Create a transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: Transaction payload
          description: Attach transaction payload
          required: true
          schema:
            $ref: "#/definitions/User_TransactionPayload"
      produces:
        - application/json
      responses:
        "201":
          description: User's transaction successfully created
          schema:
            $ref: "#/definitions/User_Transactions_POST_Response"
        "400":
          description: Empty or incorrect fields.
        "401":
          description: Unauthorized access for this endpoint.
        "500":
          description: The server has encountered an internal server error. Please try again later.
  /users/transactions/:
    get:
      security:
        - Bearer: []
      tags:
        - User Transactions Module
      summary: User transaction
      description: Retrieves a specific transaction from the user
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: transactionId
          description: Attach the transaction's id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: User's transaction details successfully retrieved
          schema:
            $ref: "#/definitions/User_Transaction_GET_Response"
        "400":
          description: Empty or incorrect fields.
        "401":
          description: Unauthorized access for this endpoint.
        "404":
          description: The transaction does not exist or has been deleted.
        "500":
          description: The server has encountered an internal server error. Please try again later.
    put:
      security:
        - Bearer: []
      tags:
        - User Transactions Module
      summary: User transaction
      description: Update a specific transaction from the user
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: Attach the transaction's id
          required: true
          type: integer
        - in: body
          name: Transaction payload
          description: Attach transaction payload
          required: true
          schema:
            $ref: "#/definitions/User_TransactionPayload"
      produces:
        - application/json
      responses:
        "200":
          description: User transaction details successfully updated
          schema:
            $ref: "#/definitions/User_Transaction_PUT_Response"
        "400":
          description: Empty or incorrect fields.
        "401":
          description: Unauthorized access for this endpoint.
        "404":
          description: The transaction does not exist or has been deleted.
        "500":
          description: The server has encountered an internal server error. Please try again later.
    delete:
      security:
        - Bearer: []
      tags:
        - User Transactions Module
      summary: User transaction
      description: Delete a specific transaction from the user
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: Attach the transaction's id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: User's transaction successfully deleted
          schema:
            $ref: "#/definitions/User_Transaction_DELETE_Response"
        "400":
          description: Empty or incorrect fields.
        "401":
          description: Unauthorized access for this endpoint.
        "404":
          description: The transaction does not exist or has already been deleted.
        "500":
          description: The server has encountered an internal server error. Please try again later.
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  User_Transactions_GET_Response:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
        example: User's month transactions successfully recovered
      body:
        type: array
        items:
          $ref: "#/definitions/User_Transactions"
  User_Transaction_POST_Response:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
        example: User's transaction successfully created
      body:
        type: array
        items:
          $ref: "#/definitions/User_Transaction"
  User_Transaction_GET_Response:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
        example: User's transaction details successfully retrieved
      body:
        type: array
        items:
          $ref: "#/definitions/User_Transaction_GET_Response"
  User_Transaction_PUT_Response:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
        example: User transaction details successfully updated
      body:
        type: array
        items:
          $ref: "#/definitions/User_Transaction"
  User_Transaction_DELETE_Response:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
        example: User's transaction successfully deleted
