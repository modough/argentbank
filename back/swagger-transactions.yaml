swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Possible API endpoints for user's transactions
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /transactions/{userId}:
    get:
      security:
        - Bearer: []
      tags:
        - User Transactions Module
      summary: User's transactions
      description: Retrieves all the user's transactions in the month
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: User's month transactions successfully recovered
          schema:
            $ref: "#/definitions/User_Transactions_GET_Response"
        "400":
          description: Empty or incorrect fields.
        "401":
          description: Unauthorized access for this endpoint.
        "404":
          description: No existing transactions on your account..
        "500":
          description: The server has encountered an internal server error. Please try again later.

  /transactions:
    post:
      security:
        - Bearer: []
      tags:
        - User Transactions Module
      summary: User's transactions
      description: Create a transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: Transaction payload
          description: Attach transaction payload
          required: true
          schema:
            $ref: "#/definitions/UserTransactionPayload"
      produces:
        - application/json
      responses:
        "201":
          description: User's transaction successfully created
          schema:
            $ref: "#/definitions/User_Transactions_POST_Response"
        "400":
          description: Empty or incorrect fields.
        "401":
          description: Unauthorized access for this endpoint.
        "500":
          description: The server has encountered an internal server error. Please try again later.

  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - User Transactions Module
      summary: User transaction
      description: Retrieves a specific transaction from the user
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: Attach the transaction's id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: User's transaction details successfully retrieved
          schema:
            $ref: "#/definitions/User_Transaction_GET_Response"
        "400":
          description: Empty or incorrect fields.
        "401":
          description: Unauthorized access for this endpoint.
        "404":
          description: The transaction does not exist or has been deleted.
        "500":
          description: The server has encountered an internal server error. Please try again later.
    put:
      security:
        - Bearer: []
      tags:
        - User Transactions Module
      summary: User transaction
      description: Update a specific transaction from the user
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: Attach the transaction's id
          required: true
          type: integer
        - in: body
          name: Transaction payload
          description: Attach transaction payload
          required: true
          schema:
            $ref: "#/definitions/UserTransactionPayload"
      produces:
        - application/json
      responses:
        "200":
          description: User transaction details successfully updated
          schema:
            $ref: "#/definitions/User_Transaction_PUT_Response"
        "400":
          description: Empty or incorrect fields.
        "401":
          description: Unauthorized access for this endpoint.
        "404":
          description: The transaction does not exist or has been deleted.
        "500":
          description: The server has encountered an internal server error. Please try again later.
    delete:
      security:
        - Bearer: []
      tags:
        - User Transactions Module
      summary: User transaction
      description: Delete a specific transaction from the user
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: Attach the transaction's id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: User's transaction successfully deleted
          schema:
            $ref: "#/definitions/User_Transaction_DELETE_Response"
        "400":
          description: Empty or incorrect fields.
        "401":
          description: Unauthorized access for this endpoint.
        "404":
          description: The transaction does not exist or has already been deleted.
        "500":
          description: The server has encountered an internal server error. Please try again later.

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User_Transactions_GET_Response:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
        example: User's month transactions successfully recovered
      body:
        type: array
        items:
          $ref: "#/definitions/UserTransactions"

  User_Transactions_POST_Response:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
        example: User's transaction successfully created
      body:
        type: array
        items:
          $ref: "#/definitions/UserTransaction"

  User_Transaction_GET_Response:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
        example: User's transaction details successfully retrieved
      body:
        type: array
        items:
          $ref: "#/definitions/UserTransaction"

  User_Transaction_PUT_Response:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
        example: User transaction details successfully updated
      body:
        type: array
        items:
          $ref: "#/definitions/UserTransaction"

  User_Transaction_DELETE_Response:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
        example: User's transaction successfully deleted

  UserTransaction:
    type: object
    properties:
      id:
        type: number
        format: integer
      authorId:
        type: number
        format: integer
      title:
        type: string
      description:
        type: string
      amount:
        type: number
        format: double
      date:
        type: string
      balance:
        type: number
        format: double

  UserTransactions:
    type: array
    items:
      $ref: "#/definitions/UserTransaction"

  UserTransactionPayload:
    properties:
      userId:
        type: number
      title:
        type: string
      description:
        type: string
      amount:
        type: number
        format: double
